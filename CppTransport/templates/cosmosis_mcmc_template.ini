; backend = cpp, minver = 201901
; '$MCMC' generated from '$SOURCE'
; processed on $DATE

[runtime]
sampler = metropolis

; By default we will be using the Metropolis-Hastings sampler. This can be swapped with any other CosmoSIS sampler easily
; see the CosmoSIS wiki page for more information on the different samplers available
[metropolis]
; save output every 20 samples
nsteps = 20
; start at the specified position in the values file, not randomly
random_start = F
; take this many total samples
samples = 25000
; Tune the proposal from sample 200 to sample 2000 every 100 samples 
; by taking the covariance of the chain
tuning_frequency = 100
tuning_grace = 200
tuning_end = 2000

[output]
format = txt
filename = $FILENAME_mcmc/mcmc_output.txt
verbosity = debug

[pipeline]
modules = cppt_sample consistency modified_class planck
values = $FILENAME_mcmc/$FILENAME_values.ini
priors = $FILENAME_mcmc/$FILENAME_priors.ini

extra_output = twopf_observables/k_piv twopf_observables/N_piv twopf_observables/A_s twopf_observables/A_t twopf_observables/n_s twopf_observables/n_t twopf_observables/n_s_full twopf_observables/n_t_full twopf_observables/r thrpf_observables/B_equi thrpf_observables/fNL_equi thrpf_observables/B_squ thrpf_observables/fNL_squ thrpf_observables/B_fold thrpf_observables/fNL_fold $FOR{ £FIELDNUM, "twopf_observables/NormMassMatrixEigenValue£FIELDNUM ", NumFields , False, False} twopf_observables/Nefold twopf_observables/CppTTime

likelihoods = planck2015
quiet=F
debug=F
timing=F

[planck]
file   = $${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
data_1 = $${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/plik_lite_v18_TT.clik
data_2 = $${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/commander_rc2_v1.1_l2_29_B.clik
; You can also add more here
; and lensing files can be included with, e.g.:
;lensing_1 = /path/to/wherever/you/downloaded/data/smica_g30_ftl_full_pttptt.clik_lensing

; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = $${COSMOSIS_SRC_DIR}/cosmosis-standard-library/utility/consistency/consistency_interface.py

[modified_class]
file = $CPPT_BUILD_LOCATION/include/cpptransport/transport-runtime/tasks/postintegration_detail/class_interface.py
lmax = 2508
kmax = 50.0

[cppt_sample]
file = $${PWD}/build/lib$MODEL_sampling.so
M_P = 1.0
k_samples = 400
k_pivot = 0.002
Debug = F
ThreepfEqui = F
ThreepfSqueeze = F
ThreepfFold = F
MassEigenSquare = F
